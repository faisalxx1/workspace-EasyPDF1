/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/pdf/merge/route";
exports.ids = ["app/api/pdf/merge/route"];
exports.modules = {

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fpdf%2Fmerge%2Froute&page=%2Fapi%2Fpdf%2Fmerge%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fpdf%2Fmerge%2Froute.ts&appDir=%2FUsers%2Ff2i1%2FDocuments%2FGitHub%2Fworkspace-EasyPDF1%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Ff2i1%2FDocuments%2FGitHub%2Fworkspace-EasyPDF1&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fpdf%2Fmerge%2Froute&page=%2Fapi%2Fpdf%2Fmerge%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fpdf%2Fmerge%2Froute.ts&appDir=%2FUsers%2Ff2i1%2FDocuments%2FGitHub%2Fworkspace-EasyPDF1%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Ff2i1%2FDocuments%2FGitHub%2Fworkspace-EasyPDF1&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D! ***!
  \*******************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   workAsyncStorage: () => (/* binding */ workAsyncStorage),\n/* harmony export */   workUnitAsyncStorage: () => (/* binding */ workUnitAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/route-kind */ \"(rsc)/./node_modules/next/dist/server/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _Users_f2i1_Documents_GitHub_workspace_EasyPDF1_src_app_api_pdf_merge_route_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./src/app/api/pdf/merge/route.ts */ \"(rsc)/./src/app/api/pdf/merge/route.ts\");\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/pdf/merge/route\",\n        pathname: \"/api/pdf/merge\",\n        filename: \"route\",\n        bundlePath: \"app/api/pdf/merge/route\"\n    },\n    resolvedPagePath: \"/Users/f2i1/Documents/GitHub/workspace-EasyPDF1/src/app/api/pdf/merge/route.ts\",\n    nextConfigOutput,\n    userland: _Users_f2i1_Documents_GitHub_workspace_EasyPDF1_src_app_api_pdf_merge_route_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { workAsyncStorage, workUnitAsyncStorage, serverHooks } = routeModule;\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        workAsyncStorage,\n        workUnitAsyncStorage\n    });\n}\n\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIvaW5kZXguanM/bmFtZT1hcHAlMkZhcGklMkZwZGYlMkZtZXJnZSUyRnJvdXRlJnBhZ2U9JTJGYXBpJTJGcGRmJTJGbWVyZ2UlMkZyb3V0ZSZhcHBQYXRocz0mcGFnZVBhdGg9cHJpdmF0ZS1uZXh0LWFwcC1kaXIlMkZhcGklMkZwZGYlMkZtZXJnZSUyRnJvdXRlLnRzJmFwcERpcj0lMkZVc2VycyUyRmYyaTElMkZEb2N1bWVudHMlMkZHaXRIdWIlMkZ3b3Jrc3BhY2UtRWFzeVBERjElMkZzcmMlMkZhcHAmcGFnZUV4dGVuc2lvbnM9dHN4JnBhZ2VFeHRlbnNpb25zPXRzJnBhZ2VFeHRlbnNpb25zPWpzeCZwYWdlRXh0ZW5zaW9ucz1qcyZyb290RGlyPSUyRlVzZXJzJTJGZjJpMSUyRkRvY3VtZW50cyUyRkdpdEh1YiUyRndvcmtzcGFjZS1FYXN5UERGMSZpc0Rldj10cnVlJnRzY29uZmlnUGF0aD10c2NvbmZpZy5qc29uJmJhc2VQYXRoPSZhc3NldFByZWZpeD0mbmV4dENvbmZpZ091dHB1dD0mcHJlZmVycmVkUmVnaW9uPSZtaWRkbGV3YXJlQ29uZmlnPWUzMCUzRCEiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7QUFBK0Y7QUFDdkM7QUFDcUI7QUFDOEI7QUFDM0c7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLHlHQUFtQjtBQUMzQztBQUNBLGNBQWMsa0VBQVM7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLFlBQVk7QUFDWixDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0EsUUFBUSxzREFBc0Q7QUFDOUQ7QUFDQSxXQUFXLDRFQUFXO0FBQ3RCO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDMEY7O0FBRTFGIiwic291cmNlcyI6WyIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQXBwUm91dGVSb3V0ZU1vZHVsZSB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL3JvdXRlLW1vZHVsZXMvYXBwLXJvdXRlL21vZHVsZS5jb21waWxlZFwiO1xuaW1wb3J0IHsgUm91dGVLaW5kIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvcm91dGUta2luZFwiO1xuaW1wb3J0IHsgcGF0Y2hGZXRjaCBhcyBfcGF0Y2hGZXRjaCB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2xpYi9wYXRjaC1mZXRjaFwiO1xuaW1wb3J0ICogYXMgdXNlcmxhbmQgZnJvbSBcIi9Vc2Vycy9mMmkxL0RvY3VtZW50cy9HaXRIdWIvd29ya3NwYWNlLUVhc3lQREYxL3NyYy9hcHAvYXBpL3BkZi9tZXJnZS9yb3V0ZS50c1wiO1xuLy8gV2UgaW5qZWN0IHRoZSBuZXh0Q29uZmlnT3V0cHV0IGhlcmUgc28gdGhhdCB3ZSBjYW4gdXNlIHRoZW0gaW4gdGhlIHJvdXRlXG4vLyBtb2R1bGUuXG5jb25zdCBuZXh0Q29uZmlnT3V0cHV0ID0gXCJcIlxuY29uc3Qgcm91dGVNb2R1bGUgPSBuZXcgQXBwUm91dGVSb3V0ZU1vZHVsZSh7XG4gICAgZGVmaW5pdGlvbjoge1xuICAgICAgICBraW5kOiBSb3V0ZUtpbmQuQVBQX1JPVVRFLFxuICAgICAgICBwYWdlOiBcIi9hcGkvcGRmL21lcmdlL3JvdXRlXCIsXG4gICAgICAgIHBhdGhuYW1lOiBcIi9hcGkvcGRmL21lcmdlXCIsXG4gICAgICAgIGZpbGVuYW1lOiBcInJvdXRlXCIsXG4gICAgICAgIGJ1bmRsZVBhdGg6IFwiYXBwL2FwaS9wZGYvbWVyZ2Uvcm91dGVcIlxuICAgIH0sXG4gICAgcmVzb2x2ZWRQYWdlUGF0aDogXCIvVXNlcnMvZjJpMS9Eb2N1bWVudHMvR2l0SHViL3dvcmtzcGFjZS1FYXN5UERGMS9zcmMvYXBwL2FwaS9wZGYvbWVyZ2Uvcm91dGUudHNcIixcbiAgICBuZXh0Q29uZmlnT3V0cHV0LFxuICAgIHVzZXJsYW5kXG59KTtcbi8vIFB1bGwgb3V0IHRoZSBleHBvcnRzIHRoYXQgd2UgbmVlZCB0byBleHBvc2UgZnJvbSB0aGUgbW9kdWxlLiBUaGlzIHNob3VsZFxuLy8gYmUgZWxpbWluYXRlZCB3aGVuIHdlJ3ZlIG1vdmVkIHRoZSBvdGhlciByb3V0ZXMgdG8gdGhlIG5ldyBmb3JtYXQuIFRoZXNlXG4vLyBhcmUgdXNlZCB0byBob29rIGludG8gdGhlIHJvdXRlLlxuY29uc3QgeyB3b3JrQXN5bmNTdG9yYWdlLCB3b3JrVW5pdEFzeW5jU3RvcmFnZSwgc2VydmVySG9va3MgfSA9IHJvdXRlTW9kdWxlO1xuZnVuY3Rpb24gcGF0Y2hGZXRjaCgpIHtcbiAgICByZXR1cm4gX3BhdGNoRmV0Y2goe1xuICAgICAgICB3b3JrQXN5bmNTdG9yYWdlLFxuICAgICAgICB3b3JrVW5pdEFzeW5jU3RvcmFnZVxuICAgIH0pO1xufVxuZXhwb3J0IHsgcm91dGVNb2R1bGUsIHdvcmtBc3luY1N0b3JhZ2UsIHdvcmtVbml0QXN5bmNTdG9yYWdlLCBzZXJ2ZXJIb29rcywgcGF0Y2hGZXRjaCwgIH07XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWFwcC1yb3V0ZS5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fpdf%2Fmerge%2Froute&page=%2Fapi%2Fpdf%2Fmerge%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fpdf%2Fmerge%2Froute.ts&appDir=%2FUsers%2Ff2i1%2FDocuments%2FGitHub%2Fworkspace-EasyPDF1%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Ff2i1%2FDocuments%2FGitHub%2Fworkspace-EasyPDF1&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true!":
/*!******************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true! ***!
  \******************************************************************************************************/
/***/ (() => {



/***/ }),

/***/ "(rsc)/./src/app/api/pdf/merge/route.ts":
/*!****************************************!*\
  !*** ./src/app/api/pdf/merge/route.ts ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   POST: () => (/* binding */ POST)\n/* harmony export */ });\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(rsc)/./node_modules/next/dist/api/server.js\");\n/* harmony import */ var _lib_pdf_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/lib/pdf-utils */ \"(rsc)/./src/lib/pdf-utils.ts\");\n/* harmony import */ var _lib_db__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/lib/db */ \"(rsc)/./src/lib/db.ts\");\n\n\n\nasync function POST(request) {\n    return await (0,_lib_db__WEBPACK_IMPORTED_MODULE_2__.withDb)(async ()=>{\n        try {\n            const { fileIds, options = {} } = await request.json();\n            if (!fileIds || !Array.isArray(fileIds) || fileIds.length < 2) {\n                return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                    error: 'At least 2 files are required for merging'\n                }, {\n                    status: 400\n                });\n            }\n            // Create processing job\n            const processingJob = await _lib_db__WEBPACK_IMPORTED_MODULE_2__.db.processingJob.create({\n                data: {\n                    fileIds: JSON.stringify(fileIds),\n                    operation: 'merge',\n                    status: 'processing',\n                    parameters: JSON.stringify(options),\n                    userId: request.headers.get('user-id') || null\n                }\n            });\n            try {\n                // Get file paths from database\n                const files = await _lib_db__WEBPACK_IMPORTED_MODULE_2__.db.pDFFile.findMany({\n                    where: {\n                        id: {\n                            in: fileIds\n                        }\n                    }\n                });\n                if (files.length !== fileIds.length) {\n                    throw new Error('Some files not found');\n                }\n                const filePaths = files.map((file)=>file.filePath);\n                // Process PDF merge\n                const result = await _lib_pdf_utils__WEBPACK_IMPORTED_MODULE_1__.pdfProcessor.mergePDFs(filePaths, options);\n                // Update processing job\n                await _lib_db__WEBPACK_IMPORTED_MODULE_2__.db.processingJob.update({\n                    where: {\n                        id: processingJob.id\n                    },\n                    data: {\n                        status: result.success ? 'completed' : 'failed',\n                        progress: 100,\n                        error: result.error,\n                        completedAt: new Date()\n                    }\n                });\n                // Create processing history\n                await _lib_db__WEBPACK_IMPORTED_MODULE_2__.db.processingHistory.create({\n                    data: {\n                        userId: request.headers.get('user-id') || null,\n                        jobId: processingJob.id,\n                        operation: 'merge',\n                        status: result.success ? 'completed' : 'failed',\n                        parameters: JSON.stringify(options),\n                        result: result.success ? JSON.stringify({\n                            filePath: result.filePath,\n                            fileSize: result.fileSize\n                        }) : null,\n                        error: result.error,\n                        ipAddress: request.headers.get('x-forwarded-for') || request.ip || null,\n                        userAgent: request.headers.get('user-agent') || null\n                    }\n                });\n                if (!result.success) {\n                    return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                        error: result.error\n                    }, {\n                        status: 500\n                    });\n                }\n                return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                    success: true,\n                    jobId: processingJob.id,\n                    filePath: result.filePath,\n                    fileSize: result.fileSize,\n                    downloadUrl: `/api/download?path=${encodeURIComponent(result.filePath)}`\n                });\n            } catch (error) {\n                // Update processing job with error\n                await _lib_db__WEBPACK_IMPORTED_MODULE_2__.db.processingJob.update({\n                    where: {\n                        id: processingJob.id\n                    },\n                    data: {\n                        status: 'failed',\n                        error: error instanceof Error ? error.message : 'Unknown error',\n                        completedAt: new Date()\n                    }\n                });\n                throw error;\n            }\n        } catch (error) {\n            console.error('Merge PDF error:', error);\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: 'Failed to merge PDFs'\n            }, {\n                status: 500\n            });\n        }\n    });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/app/api/pdf/merge/route.ts\n");

/***/ }),

/***/ "(rsc)/./src/lib/db.ts":
/*!***********************!*\
  !*** ./src/lib/db.ts ***!
  \***********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   db: () => (/* binding */ db),\n/* harmony export */   withDb: () => (/* binding */ withDb)\n/* harmony export */ });\n/* harmony import */ var _prisma_client__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @prisma/client */ \"@prisma/client\");\n/* harmony import */ var _prisma_client__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_prisma_client__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! fs */ \"fs\");\n/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(fs__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! path */ \"path\");\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(path__WEBPACK_IMPORTED_MODULE_2__);\n\n\n\nconst globalForPrisma = globalThis;\n// Ensure database directory exists synchronously\nfunction ensureDbDirSync() {\n    const dbPath = process.env.DATABASE_URL?.replace('file:', '') || '/tmp/custom.db';\n    const dbDir = path__WEBPACK_IMPORTED_MODULE_2___default().dirname(dbPath);\n    // Try to create directory synchronously\n    try {\n        if (!(0,fs__WEBPACK_IMPORTED_MODULE_1__.existsSync)(dbDir)) {\n            (0,fs__WEBPACK_IMPORTED_MODULE_1__.mkdirSync)(dbDir, {\n                recursive: true\n            });\n            console.log('Database directory created:', dbDir);\n        } else {\n            console.log('Database directory exists:', dbDir);\n        }\n    } catch (error) {\n        console.error('Error creating database directory:', error);\n        // Fallback to /tmp directory\n        const fallbackDir = '/tmp';\n        if (!(0,fs__WEBPACK_IMPORTED_MODULE_1__.existsSync)(fallbackDir)) {\n            (0,fs__WEBPACK_IMPORTED_MODULE_1__.mkdirSync)(fallbackDir, {\n                recursive: true\n            });\n        }\n        console.log('Using fallback database directory:', fallbackDir);\n    }\n}\n// Ensure database directory exists before creating client\nensureDbDirSync();\nconst db = globalForPrisma.prisma ?? new _prisma_client__WEBPACK_IMPORTED_MODULE_0__.PrismaClient({\n    log: [\n        'query'\n    ],\n    datasources: {\n        db: {\n            url: process.env.DATABASE_URL || 'file:/tmp/custom.db'\n        }\n    }\n});\nif (true) globalForPrisma.prisma = db;\n// Wrapper function to ensure database is connected before operations\nasync function withDb(operation) {\n    try {\n        // Ensure database is connected\n        await db.$connect();\n        console.log('Database connected for operation');\n        return await operation();\n    } catch (error) {\n        console.error('Database operation error:', error);\n        // Try to reconnect and retry operation once\n        try {\n            console.log('Attempting to reconnect to database...');\n            await db.$disconnect();\n            await db.$connect();\n            console.log('Database reconnected, retrying operation...');\n            return await operation();\n        } catch (retryError) {\n            console.error('Database retry failed:', retryError);\n            throw new Error(`Database operation failed: ${error instanceof Error ? error.message : 'Unknown error'}`);\n        }\n    }\n}\n// Initialize database connection\nasync function initializeDatabase() {\n    try {\n        await db.$connect();\n        console.log('Database connected successfully');\n    } catch (error) {\n        console.error('Database connection error:', error);\n        // Try to reconnect with fallback URL\n        try {\n            const fallbackDb = new _prisma_client__WEBPACK_IMPORTED_MODULE_0__.PrismaClient({\n                log: [\n                    'query'\n                ],\n                datasources: {\n                    db: {\n                        url: 'file:/tmp/custom.db'\n                    }\n                }\n            });\n            await fallbackDb.$connect();\n            console.log('Database connected with fallback URL');\n            return fallbackDb;\n        } catch (fallbackError) {\n            console.error('Fallback database connection failed:', fallbackError);\n            throw error;\n        }\n    }\n}\n// Initialize database on module load\ninitializeDatabase().catch(console.error);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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Yi50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBQcmlzbWFDbGllbnQgfSBmcm9tICdAcHJpc21hL2NsaWVudCdcbmltcG9ydCB7IG1rZGlyU3luYywgZXhpc3RzU3luYyB9IGZyb20gJ2ZzJ1xuaW1wb3J0IHBhdGggZnJvbSAncGF0aCdcblxuY29uc3QgZ2xvYmFsRm9yUHJpc21hID0gZ2xvYmFsVGhpcyBhcyB1bmtub3duIGFzIHtcbiAgcHJpc21hOiBQcmlzbWFDbGllbnQgfCB1bmRlZmluZWRcbn1cblxuLy8gRW5zdXJlIGRhdGFiYXNlIGRpcmVjdG9yeSBleGlzdHMgc3luY2hyb25vdXNseVxuZnVuY3Rpb24gZW5zdXJlRGJEaXJTeW5jKCkge1xuICBjb25zdCBkYlBhdGggPSBwcm9jZXNzLmVudi5EQVRBQkFTRV9VUkw/LnJlcGxhY2UoJ2ZpbGU6JywgJycpIHx8ICcvdG1wL2N1c3RvbS5kYidcbiAgY29uc3QgZGJEaXIgPSBwYXRoLmRpcm5hbWUoZGJQYXRoKVxuICBcbiAgLy8gVHJ5IHRvIGNyZWF0ZSBkaXJlY3Rvcnkgc3luY2hyb25vdXNseVxuICB0cnkge1xuICAgIGlmICghZXhpc3RzU3luYyhkYkRpcikpIHtcbiAgICAgIG1rZGlyU3luYyhkYkRpciwgeyByZWN1cnNpdmU6IHRydWUgfSlcbiAgICAgIGNvbnNvbGUubG9nKCdEYXRhYmFzZSBkaXJlY3RvcnkgY3JlYXRlZDonLCBkYkRpcilcbiAgICB9IGVsc2Uge1xuICAgICAgY29uc29sZS5sb2coJ0RhdGFiYXNlIGRpcmVjdG9yeSBleGlzdHM6JywgZGJEaXIpXG4gICAgfVxuICB9IGNhdGNoIChlcnJvcikge1xuICAgIGNvbnNvbGUuZXJyb3IoJ0Vycm9yIGNyZWF0aW5nIGRhdGFiYXNlIGRpcmVjdG9yeTonLCBlcnJvcilcbiAgICAvLyBGYWxsYmFjayB0byAvdG1wIGRpcmVjdG9yeVxuICAgIGNvbnN0IGZhbGxiYWNrRGlyID0gJy90bXAnXG4gICAgaWYgKCFleGlzdHNTeW5jKGZhbGxiYWNrRGlyKSkge1xuICAgICAgbWtkaXJTeW5jKGZhbGxiYWNrRGlyLCB7IHJlY3Vyc2l2ZTogdHJ1ZSB9KVxuICAgIH1cbiAgICBjb25zb2xlLmxvZygnVXNpbmcgZmFsbGJhY2sgZGF0YWJhc2UgZGlyZWN0b3J5OicsIGZhbGxiYWNrRGlyKVxuICB9XG59XG5cbi8vIEVuc3VyZSBkYXRhYmFzZSBkaXJlY3RvcnkgZXhpc3RzIGJlZm9yZSBjcmVhdGluZyBjbGllbnRcbmVuc3VyZURiRGlyU3luYygpXG5cbmV4cG9ydCBjb25zdCBkYiA9XG4gIGdsb2JhbEZvclByaXNtYS5wcmlzbWEgPz9cbiAgbmV3IFByaXNtYUNsaWVudCh7XG4gICAgbG9nOiBbJ3F1ZXJ5J10sXG4gICAgZGF0YXNvdXJjZXM6IHtcbiAgICAgIGRiOiB7XG4gICAgICAgIHVybDogcHJvY2Vzcy5lbnYuREFUQUJBU0VfVVJMIHx8ICdmaWxlOi90bXAvY3VzdG9tLmRiJ1xuICAgICAgfVxuICAgIH1cbiAgfSlcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIGdsb2JhbEZvclByaXNtYS5wcmlzbWEgPSBkYlxuXG4vLyBXcmFwcGVyIGZ1bmN0aW9uIHRvIGVuc3VyZSBkYXRhYmFzZSBpcyBjb25uZWN0ZWQgYmVmb3JlIG9wZXJhdGlvbnNcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiB3aXRoRGI8VD4ob3BlcmF0aW9uOiAoKSA9PiBQcm9taXNlPFQ+KTogUHJvbWlzZTxUPiB7XG4gIHRyeSB7XG4gICAgLy8gRW5zdXJlIGRhdGFiYXNlIGlzIGNvbm5lY3RlZFxuICAgIGF3YWl0IGRiLiRjb25uZWN0KClcbiAgICBjb25zb2xlLmxvZygnRGF0YWJhc2UgY29ubmVjdGVkIGZvciBvcGVyYXRpb24nKVxuICAgIHJldHVybiBhd2FpdCBvcGVyYXRpb24oKVxuICB9IGNhdGNoIChlcnJvcikge1xuICAgIGNvbnNvbGUuZXJyb3IoJ0RhdGFiYXNlIG9wZXJhdGlvbiBlcnJvcjonLCBlcnJvcilcbiAgICBcbiAgICAvLyBUcnkgdG8gcmVjb25uZWN0IGFuZCByZXRyeSBvcGVyYXRpb24gb25jZVxuICAgIHRyeSB7XG4gICAgICBjb25zb2xlLmxvZygnQXR0ZW1wdGluZyB0byByZWNvbm5lY3QgdG8gZGF0YWJhc2UuLi4nKVxuICAgICAgYXdhaXQgZGIuJGRpc2Nvbm5lY3QoKVxuICAgICAgYXdhaXQgZGIuJGNvbm5lY3QoKVxuICAgICAgY29uc29sZS5sb2coJ0RhdGFiYXNlIHJlY29ubmVjdGVkLCByZXRyeWluZyBvcGVyYXRpb24uLi4nKVxuICAgICAgcmV0dXJuIGF3YWl0IG9wZXJhdGlvbigpXG4gICAgfSBjYXRjaCAocmV0cnlFcnJvcikge1xuICAgICAgY29uc29sZS5lcnJvcignRGF0YWJhc2UgcmV0cnkgZmFpbGVkOicsIHJldHJ5RXJyb3IpXG4gICAgICB0aHJvdyBuZXcgRXJyb3IoYERhdGFiYXNlIG9wZXJhdGlvbiBmYWlsZWQ6ICR7ZXJyb3IgaW5zdGFuY2VvZiBFcnJvciA/IGVycm9yLm1lc3NhZ2UgOiAnVW5rbm93biBlcnJvcid9YClcbiAgICB9XG4gIH1cbn1cblxuLy8gSW5pdGlhbGl6ZSBkYXRhYmFzZSBjb25uZWN0aW9uXG5hc3luYyBmdW5jdGlvbiBpbml0aWFsaXplRGF0YWJhc2UoKSB7XG4gIHRyeSB7XG4gICAgYXdhaXQgZGIuJGNvbm5lY3QoKVxuICAgIGNvbnNvbGUubG9nKCdEYXRhYmFzZSBjb25uZWN0ZWQgc3VjY2Vzc2Z1bGx5JylcbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICBjb25zb2xlLmVycm9yKCdEYXRhYmFzZSBjb25uZWN0aW9uIGVycm9yOicsIGVycm9yKVxuICAgIC8vIFRyeSB0byByZWNvbm5lY3Qgd2l0aCBmYWxsYmFjayBVUkxcbiAgICB0cnkge1xuICAgICAgY29uc3QgZmFsbGJhY2tEYiA9IG5ldyBQcmlzbWFDbGllbnQoe1xuICAgICAgICBsb2c6IFsncXVlcnknXSxcbiAgICAgICAgZGF0YXNvdXJjZXM6IHtcbiAgICAgICAgICBkYjoge1xuICAgICAgICAgICAgdXJsOiAnZmlsZTovdG1wL2N1c3RvbS5kYidcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH0pXG4gICAgICBhd2FpdCBmYWxsYmFja0RiLiRjb25uZWN0KClcbiAgICAgIGNvbnNvbGUubG9nKCdEYXRhYmFzZSBjb25uZWN0ZWQgd2l0aCBmYWxsYmFjayBVUkwnKVxuICAgICAgcmV0dXJuIGZhbGxiYWNrRGJcbiAgICB9IGNhdGNoIChmYWxsYmFja0Vycm9yKSB7XG4gICAgICBjb25zb2xlLmVycm9yKCdGYWxsYmFjayBkYXRhYmFzZSBjb25uZWN0aW9uIGZhaWxlZDonLCBmYWxsYmFja0Vycm9yKVxuICAgICAgdGhyb3cgZXJyb3JcbiAgICB9XG4gIH1cbn1cblxuLy8gSW5pdGlhbGl6ZSBkYXRhYmFzZSBvbiBtb2R1bGUgbG9hZFxuaW5pdGlhbGl6ZURhdGFiYXNlKCkuY2F0Y2goY29uc29sZS5lcnJvcikiXSwibmFtZXMiOlsiUHJpc21hQ2xpZW50IiwibWtkaXJTeW5jIiwiZXhpc3RzU3luYyIsInBhdGgiLCJnbG9iYWxGb3JQcmlzbWEiLCJnbG9iYWxUaGlzIiwiZW5zdXJlRGJEaXJTeW5jIiwiZGJQYXRoIiwicHJvY2VzcyIsImVudiIsIkRBVEFCQVNFX1VSTCIsInJlcGxhY2UiLCJkYkRpciIsImRpcm5hbWUiLCJyZWN1cnNpdmUiLCJjb25zb2xlIiwibG9nIiwiZXJyb3IiLCJmYWxsYmFja0RpciIsImRiIiwicHJpc21hIiwiZGF0YXNvdXJjZXMiLCJ1cmwiLCJ3aXRoRGIiLCJvcGVyYXRpb24iLCIkY29ubmVjdCIsIiRkaXNjb25uZWN0IiwicmV0cnlFcnJvciIsIkVycm9yIiwibWVzc2FnZSIsImluaXRpYWxpemVEYXRhYmFzZSIsImZhbGxiYWNrRGIiLCJmYWxsYmFja0Vycm9yIiwiY2F0Y2giXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./src/lib/db.ts\n");

/***/ }),

/***/ "(rsc)/./src/lib/pdf-utils.ts":
/*!******************************!*\
  !*** ./src/lib/pdf-utils.ts ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   pdfProcessor: () => (/* binding */ pdfProcessor)\n/* harmony export */ });\n/* harmony import */ var pdf_lib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! pdf-lib */ \"(rsc)/./node_modules/pdf-lib/es/index.js\");\n/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! fs */ \"fs\");\n/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(fs__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! path */ \"path\");\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(path__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var uuid__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! uuid */ \"(rsc)/./node_modules/uuid/dist/esm/v4.js\");\n\n\n\n\nclass PDFProcessor {\n    constructor(){\n        // Use temporary directories for serverless environment\n        this.uploadDir = path__WEBPACK_IMPORTED_MODULE_2__.join('/tmp', 'uploads');\n        this.outputDir = path__WEBPACK_IMPORTED_MODULE_2__.join('/tmp', 'outputs');\n        // Ensure directories exist\n        if (!fs__WEBPACK_IMPORTED_MODULE_1__.existsSync(this.uploadDir)) {\n            fs__WEBPACK_IMPORTED_MODULE_1__.mkdirSync(this.uploadDir, {\n                recursive: true\n            });\n        }\n        if (!fs__WEBPACK_IMPORTED_MODULE_1__.existsSync(this.outputDir)) {\n            fs__WEBPACK_IMPORTED_MODULE_1__.mkdirSync(this.outputDir, {\n                recursive: true\n            });\n        }\n    }\n    async mergePDFs(filePaths, options = {}) {\n        try {\n            const mergedPdf = await pdf_lib__WEBPACK_IMPORTED_MODULE_0__.PDFDocument.create();\n            for (const filePath of filePaths){\n                const pdfBytes = fs__WEBPACK_IMPORTED_MODULE_1__.readFileSync(filePath);\n                const pdf = await pdf_lib__WEBPACK_IMPORTED_MODULE_0__.PDFDocument.load(pdfBytes);\n                const pages = await mergedPdf.copyPages(pdf, pdf.getPageIndices());\n                pages.forEach((page)=>mergedPdf.addPage(page));\n            }\n            const outputFileName = options.outputFileName || `merged_${(0,uuid__WEBPACK_IMPORTED_MODULE_3__[\"default\"])()}.pdf`;\n            const outputPath = path__WEBPACK_IMPORTED_MODULE_2__.join(this.outputDir, outputFileName);\n            const mergedPdfBytes = await mergedPdf.save();\n            fs__WEBPACK_IMPORTED_MODULE_1__.writeFileSync(outputPath, mergedPdfBytes);\n            return {\n                success: true,\n                filePath: outputPath,\n                fileSize: mergedPdfBytes.length\n            };\n        } catch (error) {\n            return {\n                success: false,\n                error: error instanceof Error ? error.message : 'Failed to merge PDFs'\n            };\n        }\n    }\n    async splitPDF(filePath, options) {\n        try {\n            const pdfBytes = fs__WEBPACK_IMPORTED_MODULE_1__.readFileSync(filePath);\n            const pdf = await pdf_lib__WEBPACK_IMPORTED_MODULE_0__.PDFDocument.load(pdfBytes);\n            const results = [];\n            for(let i = 0; i < options.pageRanges.length; i++){\n                const range = options.pageRanges[i];\n                const newPdf = await pdf_lib__WEBPACK_IMPORTED_MODULE_0__.PDFDocument.create();\n                for (const pageNum of range){\n                    if (pageNum > 0 && pageNum <= pdf.getPageCount()) {\n                        const [page] = await newPdf.copyPages(pdf, [\n                            pageNum - 1\n                        ]);\n                        newPdf.addPage(page);\n                    }\n                }\n                const outputFileName = options.outputFileName ? options.outputFileName.replace(/\\.(pdf)$/i, `_${i + 1}.pdf`) : `split_${(0,uuid__WEBPACK_IMPORTED_MODULE_3__[\"default\"])()}_${i + 1}.pdf`;\n                const outputPath = path__WEBPACK_IMPORTED_MODULE_2__.join(this.outputDir, outputFileName);\n                const newPdfBytes = await newPdf.save();\n                fs__WEBPACK_IMPORTED_MODULE_1__.writeFileSync(outputPath, newPdfBytes);\n                results.push(outputPath);\n            }\n            return {\n                success: true,\n                filePath: results[0],\n                fileSize: fs__WEBPACK_IMPORTED_MODULE_1__.statSync(results[0]).size\n            };\n        } catch (error) {\n            return {\n                success: false,\n                error: error instanceof Error ? error.message : 'Failed to split PDF'\n            };\n        }\n    }\n    async compressPDF(filePath, options = {}) {\n        try {\n            const pdfBytes = fs__WEBPACK_IMPORTED_MODULE_1__.readFileSync(filePath);\n            const pdf = await pdf_lib__WEBPACK_IMPORTED_MODULE_0__.PDFDocument.load(pdfBytes);\n            // Basic compression - remove unused objects and optimize\n            const outputFileName = options.outputFileName || `compressed_${(0,uuid__WEBPACK_IMPORTED_MODULE_3__[\"default\"])()}.pdf`;\n            const outputPath = path__WEBPACK_IMPORTED_MODULE_2__.join(this.outputDir, outputFileName);\n            // Save with compression options\n            const pdfBytesCompressed = await pdf.save({\n                useObjectStreams: true,\n                addDefaultPage: false,\n                preservePdfA: false\n            });\n            fs__WEBPACK_IMPORTED_MODULE_1__.writeFileSync(outputPath, pdfBytesCompressed);\n            return {\n                success: true,\n                filePath: outputPath,\n                fileSize: pdfBytesCompressed.length\n            };\n        } catch (error) {\n            return {\n                success: false,\n                error: error instanceof Error ? error.message : 'Failed to compress PDF'\n            };\n        }\n    }\n    async rotatePDF(filePath, options) {\n        try {\n            const pdfBytes = fs__WEBPACK_IMPORTED_MODULE_1__.readFileSync(filePath);\n            const pdf = await pdf_lib__WEBPACK_IMPORTED_MODULE_0__.PDFDocument.load(pdfBytes);\n            const pages = pdf.getPages();\n            const pagesToRotate = options.pages === 'all' ? pages : options.pages?.map((i)=>pages[i - 1]).filter(Boolean) || [];\n            pagesToRotate.forEach((page)=>{\n                page.setRotation(page.getRotation() + options.rotation * Math.PI / 180);\n            });\n            const outputFileName = options.outputFileName || `rotated_${(0,uuid__WEBPACK_IMPORTED_MODULE_3__[\"default\"])()}.pdf`;\n            const outputPath = path__WEBPACK_IMPORTED_MODULE_2__.join(this.outputDir, outputFileName);\n            const rotatedPdfBytes = await pdf.save();\n            fs__WEBPACK_IMPORTED_MODULE_1__.writeFileSync(outputPath, rotatedPdfBytes);\n            return {\n                success: true,\n                filePath: outputPath,\n                fileSize: rotatedPdfBytes.length\n            };\n        } catch (error) {\n            return {\n                success: false,\n                error: error instanceof Error ? error.message : 'Failed to rotate PDF'\n            };\n        }\n    }\n    async addWatermark(filePath, options) {\n        try {\n            const pdfBytes = fs__WEBPACK_IMPORTED_MODULE_1__.readFileSync(filePath);\n            const pdf = await pdf_lib__WEBPACK_IMPORTED_MODULE_0__.PDFDocument.load(pdfBytes);\n            const pages = pdf.getPages();\n            const font = await pdf.embedFont(pdf_lib__WEBPACK_IMPORTED_MODULE_0__.StandardFonts.Helvetica);\n            const fontSize = options.fontSize || 24;\n            const opacity = options.opacity || 0.3;\n            const color = options.color || '#000000';\n            // Parse color (simple hex to RGB conversion)\n            const r = parseInt(color.slice(1, 3), 16) / 255;\n            const g = parseInt(color.slice(3, 5), 16) / 255;\n            const b = parseInt(color.slice(5, 7), 16) / 255;\n            for (const page of pages){\n                const { width, height } = page.getSize();\n                let x = width / 2;\n                let y = height / 2;\n                // Adjust position based on options\n                switch(options.position){\n                    case 'top-left':\n                        x = 50;\n                        y = height - 50;\n                        break;\n                    case 'top-right':\n                        x = width - 50;\n                        y = height - 50;\n                        break;\n                    case 'bottom-left':\n                        x = 50;\n                        y = 50;\n                        break;\n                    case 'bottom-right':\n                        x = width - 50;\n                        y = 50;\n                        break;\n                    default:\n                        break;\n                }\n                page.drawText(options.text, {\n                    x: x - options.text.length * fontSize * 0.3 / 2,\n                    y: y - fontSize / 2,\n                    size: fontSize,\n                    font: font,\n                    color: (0,pdf_lib__WEBPACK_IMPORTED_MODULE_0__.rgb)(r, g, b),\n                    opacity: opacity\n                });\n            }\n            const outputFileName = options.outputFileName || `watermarked_${(0,uuid__WEBPACK_IMPORTED_MODULE_3__[\"default\"])()}.pdf`;\n            const outputPath = path__WEBPACK_IMPORTED_MODULE_2__.join(this.outputDir, outputFileName);\n            const watermarkedPdfBytes = await pdf.save();\n            fs__WEBPACK_IMPORTED_MODULE_1__.writeFileSync(outputPath, watermarkedPdfBytes);\n            return {\n                success: true,\n                filePath: outputPath,\n                fileSize: watermarkedPdfBytes.length\n            };\n        } catch (error) {\n            return {\n                success: false,\n                error: error instanceof Error ? error.message : 'Failed to add watermark'\n            };\n        }\n    }\n    async unlockPDF(filePath, options = {}) {\n        try {\n            const pdfBytes = fs__WEBPACK_IMPORTED_MODULE_1__.readFileSync(filePath);\n            // For basic password removal, we just create a new PDF without encryption\n            // Note: This is a simplified version. Real password removal would require the password\n            const pdf = await pdf_lib__WEBPACK_IMPORTED_MODULE_0__.PDFDocument.load(pdfBytes, {\n                ignoreEncryption: true\n            });\n            const outputFileName = options.outputFileName || `unlocked_${(0,uuid__WEBPACK_IMPORTED_MODULE_3__[\"default\"])()}.pdf`;\n            const outputPath = path__WEBPACK_IMPORTED_MODULE_2__.join(this.outputDir, outputFileName);\n            const unlockedPdfBytes = await pdf.save();\n            fs__WEBPACK_IMPORTED_MODULE_1__.writeFileSync(outputPath, unlockedPdfBytes);\n            return {\n                success: true,\n                filePath: outputPath,\n                fileSize: unlockedPdfBytes.length\n            };\n        } catch (error) {\n            return {\n                success: false,\n                error: error instanceof Error ? error.message : 'Failed to unlock PDF'\n            };\n        }\n    }\n    async convertPDF(filePath, options) {\n        try {\n            // This is a placeholder for PDF conversion\n            // In a real implementation, you would use libraries like pdf2pic for image conversion\n            // or specialized libraries for Word/text conversion\n            const outputFileName = options.outputFileName || `converted_${(0,uuid__WEBPACK_IMPORTED_MODULE_3__[\"default\"])()}.${options.format}`;\n            const outputPath = path__WEBPACK_IMPORTED_MODULE_2__.join(this.outputDir, outputFileName);\n            // For now, just copy the file as a placeholder\n            fs__WEBPACK_IMPORTED_MODULE_1__.copyFileSync(filePath, outputPath);\n            return {\n                success: true,\n                filePath: outputPath,\n                fileSize: fs__WEBPACK_IMPORTED_MODULE_1__.statSync(outputPath).size\n            };\n        } catch (error) {\n            return {\n                success: false,\n                error: error instanceof Error ? error.message : 'Failed to convert PDF'\n            };\n        }\n    }\n    // Utility method to clean up old files\n    cleanupOldFiles(maxAge = 3600000) {\n        const now = Date.now()[this.uploadDir, this.outputDir].forEach((dir)=>{\n            if (fs__WEBPACK_IMPORTED_MODULE_1__.existsSync(dir)) {\n                const files = fs__WEBPACK_IMPORTED_MODULE_1__.readdirSync(dir);\n                files.forEach((file)=>{\n                    const filePath = path__WEBPACK_IMPORTED_MODULE_2__.join(dir, file);\n                    const stats = fs__WEBPACK_IMPORTED_MODULE_1__.statSync(filePath);\n                    if (now - stats.mtime.getTime() > maxAge) {\n                        fs__WEBPACK_IMPORTED_MODULE_1__.unlinkSync(filePath);\n                    }\n                });\n            }\n        });\n    }\n}\nconst pdfProcessor = new PDFProcessor();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/lib/pdf-utils.ts\n");

/***/ }),

/***/ "(ssr)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true!":
/*!******************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true! ***!
  \******************************************************************************************************/
/***/ (() => {



/***/ }),

/***/ "../app-render/after-task-async-storage.external":
/*!***********************************************************************************!*\
  !*** external "next/dist/server/app-render/after-task-async-storage.external.js" ***!
  \***********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/after-task-async-storage.external.js");

/***/ }),

/***/ "../app-render/work-async-storage.external":
/*!*****************************************************************************!*\
  !*** external "next/dist/server/app-render/work-async-storage.external.js" ***!
  \*****************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/work-async-storage.external.js");

/***/ }),

/***/ "./work-unit-async-storage.external":
/*!**********************************************************************************!*\
  !*** external "next/dist/server/app-render/work-unit-async-storage.external.js" ***!
  \**********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/work-unit-async-storage.external.js");

/***/ }),

/***/ "@prisma/client":
/*!*********************************!*\
  !*** external "@prisma/client" ***!
  \*********************************/
/***/ ((module) => {

"use strict";
module.exports = require("@prisma/client");

/***/ }),

/***/ "crypto":
/*!*************************!*\
  !*** external "crypto" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("crypto");

/***/ }),

/***/ "fs":
/*!*********************!*\
  !*** external "fs" ***!
  \*********************/
/***/ ((module) => {

"use strict";
module.exports = require("fs");

/***/ }),

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "path":
/*!***********************!*\
  !*** external "path" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("path");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next","vendor-chunks/uuid","vendor-chunks/pdf-lib","vendor-chunks/@pdf-lib","vendor-chunks/pako"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fpdf%2Fmerge%2Froute&page=%2Fapi%2Fpdf%2Fmerge%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fpdf%2Fmerge%2Froute.ts&appDir=%2FUsers%2Ff2i1%2FDocuments%2FGitHub%2Fworkspace-EasyPDF1%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Ff2i1%2FDocuments%2FGitHub%2Fworkspace-EasyPDF1&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();